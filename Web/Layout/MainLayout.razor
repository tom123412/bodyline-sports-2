@using Microsoft.Extensions.Caching.Memory
@using Microsoft.Extensions.Options
@using Web.Facebook
@inherits LayoutComponentBase

@inject IMemoryCache Cache
@inject IOptions<FacebookOptions> FacebookOptions

<div class="p-2">
    <header
        class="grid gap-x-4 border-b-2 [border-color:canvastext] [grid-template-areas:'logo''about''image''contact'] lg:[grid-template-areas:'logo_contact''about_about''image_image'] lg:grid-cols-[1fr_auto] shadow-lg">
        @if (Posts.Any(p => p.Tags.Select(t => t.Name).Intersect(FacebookOptions.Value.PromotionTags).Any()))
        {
            <HamburgerMenu />
        }
        <Logo />
        <About />
        <Image />
        <Contact />
    </header>
    <main class="pt-4">
        @Body
    </main>
    <footer class="border-t-2 border-black p-1">
        <p>&copy; @DateTime.Now.Year </p>
    </footer>
</div>

@code {
    private FacebookPost[] Posts = [];

    protected override void OnInitialized()
    {
        const string PostsCacheKey = "FacebookPosts";
        Posts = Cache.Get<FacebookPost[]>(PostsCacheKey) ?? [];
        base.OnInitialized();
    }
}